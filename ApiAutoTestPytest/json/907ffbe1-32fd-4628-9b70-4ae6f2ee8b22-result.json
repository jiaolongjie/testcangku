{"name": "test_erJi[getData1]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_erJi.TestErJi object at 0x0000025122BA4348>\ngetData = {'data': {'csid': '1', 'page': '100'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_erJi(self,getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],json=getData['json'],headers=getData['headers'])\n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n..\\testcases\\test_erJi.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <util.requestUtil.RequestUtil object at 0x0000025122020388>\nresult = <Response [200]>, statusCode = '200', errorCode = '400'\nmsg = '当前page存在问题'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url),'请求路径')\n            allure.attach(str(result.request.method),'请求方式')\n            allure.attach(str(result.request.headers),'请求头')\n            allure.attach(str(result.request.body),'请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers),'响应头')\n            allure.attach(str(result.text),'响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode),'预期响应状态码')\n            allure.attach(str(errorCode),'预期返回错误码')\n            allure.attach(str(msg),'预期返回错误信息')\n    \n            assert result.status_code == int(statusCode)\n            assert result.json()['status'] == int(errorCode)\n>           assert result.json()['msg'] == msg\nE           AssertionError\n\n..\\util\\requestUtil.py:62: AssertionError"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "19ce7cd2-6498-42c8-b832-c3c61dc03361-attachment.attach"}, {"name": "请求方式", "source": "9e56e7e8-e826-4eaa-bfdc-764ceeb0c963-attachment.attach"}, {"name": "请求头", "source": "d032c6dd-6372-4066-8579-57730c0ef294-attachment.attach"}, {"name": "请求体", "source": "3dd5c956-5ced-43e5-8084-b1534b59ffbc-attachment.attach"}], "start": 1610079105036, "stop": 1610079105040}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "41071c8f-e408-43ad-9fd0-471bc887b908-attachment.attach"}, {"name": "响应头", "source": "722abd1c-82d1-4928-b704-04c40c446695-attachment.attach"}, {"name": "响应文本内容", "source": "df81d59a-1299-47fb-8588-827845bc9cb8-attachment.attach"}], "start": 1610079105040, "stop": 1610079105042}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\PycharmProjects\\ApiAutoTestPytest\\util\\requestUtil.py\", line 62, in assertResult\n    assert result.json()['msg'] == msg\n"}, "attachments": [{"name": "预期响应状态码", "source": "80924b94-4a2a-48e1-8e54-c2c7d0255fca-attachment.attach"}, {"name": "预期返回错误码", "source": "60acceef-18d0-4459-ab5f-2a7a290123f6-attachment.attach"}, {"name": "预期返回错误信息", "source": "3d6a4f9b-bed4-4794-b0a9-ff32e1f47d4c-attachment.attach"}], "start": 1610079105042, "stop": 1610079105044}], "parameters": [{"name": "getData", "value": "{'name': 'erJi', 'method': 'POST', 'url': 'http://192.168.1.165:8081/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': '1', 'page': '100'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '当前page存在问题'}}"}], "start": 1610079105016, "stop": 1610079105044, "uuid": "36bdc2ca-3a09-4423-989d-c911ea2f046c", "historyId": "68b2af2477e52da000509bfccef2af8d", "testCaseId": "64a1b3a2a3d04e960280604741456f7b", "fullName": "testcases.test_erJi.TestErJi#test_erJi", "labels": [{"name": "feature", "value": "商品信息"}, {"name": "story", "value": "二级分页接口"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_erJi"}, {"name": "subSuite", "value": "TestErJi"}, {"name": "host", "value": "DESKTOP-HLLR26H"}, {"name": "thread", "value": "30708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_erJi"}]}