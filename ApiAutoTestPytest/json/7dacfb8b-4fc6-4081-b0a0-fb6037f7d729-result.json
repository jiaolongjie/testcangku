{"name": "test_erJi[getData1]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_erJi.TestErJi object at 0x0000025F7C611D88>\ngetData = {'data': {'csid': '1', 'page': '100'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_erJi(self,getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],json=getData['json'],headers=getData['headers'])\n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n..\\testcases\\test_erJi.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <util.requestUtil.RequestUtil object at 0x0000025F7C5C7788>\nresult = <Response [200]>, statusCode = '200', errorCode = '400'\nmsg = '当前page存在问题'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url),'请求路径')\n            allure.attach(str(result.request.method),'请求方式')\n            allure.attach(str(result.request.headers),'请求头')\n            allure.attach(str(result.request.body),'请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers),'响应头')\n            allure.attach(str(result.text),'响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode),'预期响应状态码')\n            allure.attach(str(errorCode),'预期返回错误码')\n            allure.attach(str(msg),'预期返回错误信息')\n    \n            assert result.status_code == int(statusCode)\n            assert result.json()['status'] == int(errorCode)\n>           assert result.json()['msg'] == msg\nE           AssertionError\n\n..\\util\\requestUtil.py:62: AssertionError"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "4aa1425d-63a2-4c95-9195-8b1d60799cd2-attachment.attach"}, {"name": "请求方式", "source": "0654f7bb-a6a7-4eeb-a08f-a79ca8a704f4-attachment.attach"}, {"name": "请求头", "source": "9441eac3-639a-4076-b3d4-ced14d44725a-attachment.attach"}, {"name": "请求体", "source": "f42488ca-09e9-4628-b2ee-753b98014969-attachment.attach"}], "start": 1610270197420, "stop": 1610270197422}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "2421862f-d3a7-42bd-8dba-4f91fabf9d6f-attachment.attach"}, {"name": "响应头", "source": "d7982fba-5853-43b3-8a7f-8a5845557ca0-attachment.attach"}, {"name": "响应文本内容", "source": "68c72ff7-d212-4250-b9f7-6664bbd4e148-attachment.attach"}], "start": 1610270197422, "stop": 1610270197424}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\PycharmProjects\\ApiAutoTestPytest\\util\\requestUtil.py\", line 62, in assertResult\n    assert result.json()['msg'] == msg\n"}, "attachments": [{"name": "预期响应状态码", "source": "0524917a-d86c-4f0b-bb44-c565d28d5d02-attachment.attach"}, {"name": "预期返回错误码", "source": "a7b6e722-479d-4adc-8007-b2fd7f77ee1a-attachment.attach"}, {"name": "预期返回错误信息", "source": "622c18b4-e852-484f-85ff-21e03da5ab15-attachment.attach"}], "start": 1610270197424, "stop": 1610270197426}], "parameters": [{"name": "getData", "value": "{'name': 'erJi', 'method': 'POST', 'url': 'http://192.168.1.165:8081/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': '1', 'page': '100'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '当前page存在问题'}}"}], "start": 1610270197398, "stop": 1610270197427, "uuid": "53fd302d-306d-4125-977b-53e061e8db74", "historyId": "68b2af2477e52da000509bfccef2af8d", "testCaseId": "64a1b3a2a3d04e960280604741456f7b", "fullName": "testcases.test_erJi.TestErJi#test_erJi", "labels": [{"name": "feature", "value": "商品信息"}, {"name": "story", "value": "二级分页接口"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_erJi"}, {"name": "subSuite", "value": "TestErJi"}, {"name": "host", "value": "DESKTOP-HLLR26H"}, {"name": "thread", "value": "58156-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_erJi"}]}