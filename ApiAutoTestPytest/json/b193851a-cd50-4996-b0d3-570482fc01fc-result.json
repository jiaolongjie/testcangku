{"name": "test_erJi[getData1]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_erJi.TestErJi object at 0x000002AC88EDDFC8>\ngetData = {'data': None, 'headers': None, 'json': None, 'method': 'GET', ...}\n\n    @allure.story('二级分页接口')\n    def test_erJi(self,getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],json=getData['json'],headers=getData['headers'])\n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n..\\testcases\\test_erJi.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <util.requestUtil.RequestUtil object at 0x000002AC88303408>\nresult = <Response [200]>, statusCode = '200', errorCode = '400'\nmsg = '当前page存在问题'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url),'请求路径')\n            allure.attach(str(result.request.method),'请求方式')\n            allure.attach(str(result.request.headers),'请求头')\n            allure.attach(str(result.request.body),'请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers),'响应头')\n            allure.attach(str(result.text),'响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode),'预期响应状态码')\n            allure.attach(str(errorCode),'预期返回错误码')\n            allure.attach(str(msg),'预期返回错误信息')\n    \n            assert result.status_code == int(statusCode)\n            assert result.json()['status'] == int(errorCode)\n>           assert result.json()['msg'] == msg\nE           AssertionError\n\n..\\util\\requestUtil.py:62: AssertionError"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "1b15184b-4042-45e5-8cce-e0156d1a07a6-attachment.attach"}, {"name": "请求方式", "source": "2b15a8ed-5280-4652-aa31-bb05580f263a-attachment.attach"}, {"name": "请求头", "source": "dc12d5c6-5bd6-48c4-92dc-686186105220-attachment.attach"}, {"name": "请求体", "source": "b0a6d610-c6ce-4cf3-b79b-5ac9e0829819-attachment.attach"}], "start": 1610078870557, "stop": 1610078870559}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "66c1cc81-7398-47bf-b9fd-c96b0cf9d748-attachment.attach"}, {"name": "响应头", "source": "ea10897c-314c-4a5c-8564-69f8c061a688-attachment.attach"}, {"name": "响应文本内容", "source": "28a7eda8-4db6-4df6-b677-4dff700c3ea4-attachment.attach"}], "start": 1610078870559, "stop": 1610078870561}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\PycharmProjects\\ApiAutoTestPytest\\util\\requestUtil.py\", line 62, in assertResult\n    assert result.json()['msg'] == msg\n"}, "attachments": [{"name": "预期响应状态码", "source": "203315ee-411d-42f1-ad68-95f8835a3e48-attachment.attach"}, {"name": "预期返回错误码", "source": "9acf4d0a-3b2a-4986-819a-309233d6a197-attachment.attach"}, {"name": "预期返回错误信息", "source": "f001ba36-284e-4cc3-a074-803b0a34755c-attachment.attach"}], "start": 1610078870561, "stop": 1610078870563}], "parameters": [{"name": "getData", "value": "{'name': 'erJi', 'method': 'GET', 'url': 'http://192.168.1.165:8081/shop/mfindByPageCsid', 'headers': None, 'params': {'csid': '1', 'page': '100'}, 'data': None, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '当前page存在问题'}}"}], "start": 1610078870536, "stop": 1610078870563, "uuid": "70834557-e3de-4ec3-8dea-d04bb5b2ba4d", "historyId": "68b2af2477e52da000509bfccef2af8d", "testCaseId": "64a1b3a2a3d04e960280604741456f7b", "fullName": "testcases.test_erJi.TestErJi#test_erJi", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_erJi"}, {"name": "subSuite", "value": "TestErJi"}, {"name": "host", "value": "DESKTOP-HLLR26H"}, {"name": "thread", "value": "30388-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_erJi"}]}