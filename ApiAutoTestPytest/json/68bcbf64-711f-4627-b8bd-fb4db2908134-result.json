{"name": "test_erJi[getData2]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_erJi.TestErJi object at 0x000002B0630B6448>\ngetData = {'data': {'csid': '100', 'page': '1'}, 'headers': None, 'json': None, 'method': 'POST', ...}\n\n    @allure.story('二级分页接口')\n    def test_erJi(self,getData):\n        # 发送请求\n        result = ru.doRequest(method=getData['method'],url=getData['url'],params=getData['params'],data=getData['data'],json=getData['json'],headers=getData['headers'])\n    \n>       ru.assertResult(result,getData['validate']['statusCode'],getData['validate']['errorCode'],getData['validate']['msg'])\n\n..\\testcases\\test_erJi.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <util.requestUtil.RequestUtil object at 0x000002B062EF5208>\nresult = <Response [200]>, statusCode = '200', errorCode = '400'\nmsg = '当前csid存在问题'\n\n    def assertResult(self, result, statusCode, errorCode, msg):\n        with allure.step('发送请求'):\n            allure.attach(str(result.request.url),'请求路径')\n            allure.attach(str(result.request.method),'请求方式')\n            allure.attach(str(result.request.headers),'请求头')\n            allure.attach(str(result.request.body),'请求体')\n    \n        with allure.step('获取响应'):\n            allure.attach(str(result.status_code),'响应状态码')\n            allure.attach(str(result.headers),'响应头')\n            allure.attach(str(result.text),'响应文本内容')\n    \n        with allure.step('断言'):\n            allure.attach(str(statusCode),'预期响应状态码')\n            allure.attach(str(errorCode),'预期返回错误码')\n            allure.attach(str(msg),'预期返回错误信息')\n    \n            assert result.status_code == int(statusCode)\n            assert result.json()['status'] == int(errorCode)\n>           assert result.json()['msg'] == msg\nE           AssertionError\n\n..\\util\\requestUtil.py:62: AssertionError"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求路径", "source": "b34d370e-f941-4a51-8607-5bb531964eab-attachment.attach"}, {"name": "请求方式", "source": "eb2519f4-84d1-4dc3-9e18-7e79091a2d05-attachment.attach"}, {"name": "请求头", "source": "ab185089-4c0a-4e32-9612-b50e4b11a009-attachment.attach"}, {"name": "请求体", "source": "4c7f3d77-64e5-4190-b416-a6b2560da550-attachment.attach"}], "start": 1610077695403, "stop": 1610077695406}, {"name": "获取响应", "status": "passed", "attachments": [{"name": "响应状态码", "source": "f4d8949a-2822-420e-a06e-5e99536a0f44-attachment.attach"}, {"name": "响应头", "source": "82dc56d0-efea-4e6a-848c-97c5281114e1-attachment.attach"}, {"name": "响应文本内容", "source": "dc2ab0d9-76cf-4826-ab25-5ecc6a79e837-attachment.attach"}], "start": 1610077695407, "stop": 1610077695409}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\PycharmProjects\\ApiAutoTestPytest\\util\\requestUtil.py\", line 62, in assertResult\n    assert result.json()['msg'] == msg\n"}, "attachments": [{"name": "预期响应状态码", "source": "aa78ae37-1bf4-4548-b315-a317a9ffedc2-attachment.attach"}, {"name": "预期返回错误码", "source": "a999cb21-0d94-497c-96d8-7030c1a8b8e6-attachment.attach"}, {"name": "预期返回错误信息", "source": "f4efbd08-b94c-4e77-a0b6-41db415e1403-attachment.attach"}], "start": 1610077695409, "stop": 1610077695417}], "parameters": [{"name": "getData", "value": "{'name': 'erJi', 'method': 'POST', 'url': 'http://192.168.1.165:8081/shop/mfindByPageCsid', 'headers': None, 'params': None, 'data': {'csid': '100', 'page': '1'}, 'json': None, 'validate': {'statusCode': '200', 'errorCode': '400', 'msg': '当前csid存在问题'}}"}], "start": 1610077695352, "stop": 1610077695417, "uuid": "1ebf95c5-3da0-4cc6-a385-18408c043a0a", "historyId": "18a2cede54a6d387216576aab07284f0", "testCaseId": "64a1b3a2a3d04e960280604741456f7b", "fullName": "testcases.test_erJi.TestErJi#test_erJi", "labels": [{"name": "story", "value": "二级分页接口"}, {"name": "feature", "value": "商品信息"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_erJi"}, {"name": "subSuite", "value": "TestErJi"}, {"name": "host", "value": "DESKTOP-HLLR26H"}, {"name": "thread", "value": "28724-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_erJi"}]}